{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","sections/NavigationSection.js","sections/TitlesSection.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","style","className","Component","DownIcon","onClick","src","icon","alt","AboutSection","state","colorArr","bgColor","colorText","background","color","data","sections","title","items","map","p","content","activeClass","to","spy","smooth","offset","duration","delay","onSetActive","handleSetActive","icons","down","name","SkillCard","skill","image","SkillSection","eachSkill","up","marginBottom","transform","backgroundColor","NavigationSection","changeColor","TitlesSection","subtitle","Object","keys","links","key","url","App","getRandColor","colors","Math","floor","random","length","setState","titlesColor","aboutColor","skillColor","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.32b8ad2d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport \"./Fullpage.css\";\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div\r\n        style={this.props.style}\r\n        className={`fullpage ${this.props.className || \"\"}`}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React from \"react\";\r\n\r\nimport \"./DownIcon.css\";\r\n\r\nconst DownIcon = (props) => {\r\n  return (\r\n    <div\r\n      onClick={props.onClick}\r\n      className=\"downIcon-wrapper\"\r\n      style={props.style}\r\n    >\r\n      <div className=\"downIcon1\">\r\n        <img src={props.icon} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./AboutSection.css\";\r\n\r\nclass AboutSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colorArr: { bgColor: \"blue\", colorText: \"#fff\" },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage\r\n          className=\"second\"\r\n          style={{\r\n            background: this.props.colorArr[\"bgColor\"],\r\n            color: this.props.colorArr[\"colorText\"],\r\n          }}\r\n        >\r\n          <h1>{data.sections[0].title}</h1>\r\n          <div className=\"paragraphs\">\r\n            {data.sections[0].items.map((p) => {\r\n              return <p>{p.content}</p>;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"skill\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={50}\r\n          duration={300}\r\n          delay={300}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <DownIcon icon={data.icons.down} />\r\n        </Link>\r\n        <Element name=\"skill\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"image-wrapper\">\r\n          <img src={skill.content.image} alt=\"\" />\r\n        </div>\r\n        <div className=\"skill-title-wrapper\">\r\n          <h3>{skill.content.title}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nimport \"./NavigationSection\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport SkillCard from \"../components/SkillCard\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport \"./SkillSection.css\";\r\n\r\nclass SkillSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colorArr: { bgColor: \"gray\", colorText: \"#fff\" },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage\r\n          className=\"third\"\r\n          style={{\r\n            background: this.props.colorArr[\"bgColor\"],\r\n            color: this.props.colorArr[\"colorText\"],\r\n          }}\r\n        >\r\n          <h1>{data.sections[1].title}</h1>\r\n          <div className=\"cards-wrapper\">\r\n            {data.sections[1].items.map((eachSkill) => {\r\n              return <SkillCard skill={eachSkill} />;\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"titles\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={300}\r\n          delay={300}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <DownIcon\r\n            icon={data.icons.up}\r\n            style={{\r\n              marginBottom: \"-45px\",\r\n              transform: \"translateY(0px)\",\r\n              backgroundColor: this.props.colorArr[\"bgColor\"],\r\n            }}\r\n          />\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./AboutSection\";\r\nimport \"./SkillSection\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./NavigationSection.css\";\r\n\r\nclass NavigationSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colorArr: { bgColor: \"blue\", colorText: \"#fff\" },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"titles\" className=\"element\"></Element>\r\n        <div className=\"navigation\">\r\n          <div className=\"left1\">\r\n            <button\r\n              className=\"button b2\"\r\n              onClick={() => this.props.changeColor()}\r\n              style={{\r\n                background: this.props.colorArr[\"bgColor\"],\r\n                color: this.props.colorArr[\"colorText\"],\r\n              }}\r\n            >\r\n              <i className=\"fas fa-paint-brush\"></i>Color Me\r\n            </button>\r\n          </div>\r\n          <div className=\"right1\">\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"skill\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={50}\r\n              duration={300}\r\n              delay={300}\r\n            >\r\n              <button\r\n                className=\"button b1\"\r\n                style={{\r\n                  background: this.props.colorArr[\"bgColor\"],\r\n                  color: this.props.colorArr[\"colorText\"],\r\n                }}\r\n              >\r\n                Skills\r\n              </button>\r\n            </Link>\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"about\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={0}\r\n              duration={300}\r\n              delay={300}\r\n            >\r\n              <button\r\n                className=\"button b1\"\r\n                style={{\r\n                  background: this.props.colorArr[\"bgColor\"],\r\n                  color: this.props.colorArr[\"colorText\"],\r\n                }}\r\n              >\r\n                About\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\n\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport { Link, Element } from \"react-scroll\";\r\n\r\nimport \"./TitlesSection.css\";\r\n\r\nclass TitlesSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colorArr: { bgColor: \"blue\", colorText: \"#fff\" },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage\r\n          className=\"first\"\r\n          style={{\r\n            background: this.props.colorArr[\"bgColor\"],\r\n            color: this.props.colorArr[\"colorText\"],\r\n          }}\r\n        >\r\n          <h1 className=\"title\">{data.title}</h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"icons-wrapper\">\r\n            {Object.keys(data.links).map((key) => {\r\n              return (\r\n                <div className=\"icon\">\r\n                  <SocialIcon url={data.links[key]} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Fullpage>\r\n        <Link\r\n          activeClass=\"active\"\r\n          to=\"about\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={0}\r\n          duration={300}\r\n          delay={300}\r\n          onSetActive={this.handleSetActive}\r\n        >\r\n          <DownIcon icon={data.icons.down} />\r\n        </Link>\r\n        <Element name=\"about\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesSection;\r\n","import React, { Component } from \"react\";\n\nimport NavigationSection from \"./sections/NavigationSection\";\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport SnowStorm from \"react-snowstorm\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      titlesColor: { bgColor: \"#2a9d8f\", colorText: \"#fff\" },\n      aboutColor: { bgColor: \"#2a9d8f\", colorText: \"#fff\" },\n      skillColor: { bgColor: \"#2a9d8f\", colorText: \"#fff\" },\n      colors: [\n        { bgColor: \"#3d3522\", colorText: \"#f3ca40\" },\n        { bgColor: \"#f3b5a6\", colorText: \"#264653\" },\n        { bgColor: \"#db2b39\", colorText: \"#f0cea0\" },\n        { bgColor: \"#a6cfa0\", colorText: \"#201f32\" },\n        { bgColor: \"#2d5362\", colorText: \"#f4a666\" },\n        { bgColor: \"#56cfe1\", colorText: \"#2b2d42\" },\n        { bgColor: \"#ee2e31\", colorText: \"#fff\" },\n        { bgColor: \"#f4a261\", colorText: \"#264653\" },\n        { bgColor: \"#36413e\", colorText: \"#dcc9b6\" },\n      ],\n    };\n  }\n  getRandColor = () => {\n    let { colors } = this.state;\n    let random = Math.floor(Math.random() * colors.length);\n    return colors[random];\n  };\n  changeColor = () => {\n    this.setState({\n      titlesColor: this.getRandColor(),\n    });\n  };\n\n  render() {\n    let { titlesColor } = this.state;\n    return (\n      <div className=\"App\">\n        <SnowStorm />\n        <NavigationSection\n          changeColor={this.changeColor}\n          colorArr={titlesColor}\n        />\n        <TitlesSection colorArr={titlesColor} />\n        <AboutSection colorArr={titlesColor} />\n        <SkillSection colorArr={titlesColor} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}